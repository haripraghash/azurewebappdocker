{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    /* General */
    "environment": {
      "type": "string",
      "defaultValue": "dev"
    },
    "shortregion": {
      "type": "string",
      "defaultValue": "eun"
    },
    /* Key Vault */
    "keyVaultName": {
      "type": "string",
      "defaultValue": "vault"
    },

    /* App Service Plan */
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "apps-svc-plan"
    },
    "appServicePlanSKUTier": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "appServicePlanSKUName": {
      "type": "string",
      "defaultValue": "S1"
    },

    /* API App Service */
    "apiAppServiceName": {
      "type": "string",
      "defaultValue": "api-app"
    },

    /* SQL DB */
    "sqlServerName": {
      "type": "string",
      "defaultValue": "productdb"
    },
    "sqlDbName": {
      "type": "string",
      "defaultValue": "productdb"
    },
    "sqlDbEdition": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "sqlDbTier": {
      "type": "string",
      "defaultValue": "S1"
    },

    "sqlServerAdminLogin": {
      "type": "string",
      "defaultValue": "productadmin"
    },
    "sqlServerAdminLoginPassword": {
      "type": "securestring"
    },

    "sqlDbMaxSizeInBytes": {
      "type": "string",
      "defaultValue": "268435456000"
    },
    "aadTenantId": {
      "type": "string",
      "defaultValue": ""
    },
    "aadAdminLogin": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Either the username of a user (e.g. 'bob@contoso.com'), or the name of a group (e.g. 'sql server admins')"
      }
    },
    "aadAdminObjectId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Object ID of the specific user or group"
      }
    },

    /* UI App Service */
    "uiAppServiceName": {
      "type": "string",
      "defaultValue": "ui-app"
    },

    /* App Insights */
    "appInsightsSuffix": {
      "type": "string",
      "defaultValue": "-insights"
    },
    "appInsightsLocation": {
      "type": "string",
      "defaultValue": "eastus"
    },

    /* Artifacts parameters */
    "_artifactsLocation": {
      "type": "string"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring"
    },
    "_templateFolder": {
      "type": "string",
      "defaultValue": "resources"
    },
    "_scriptsFolder": {
      "type": "string",
      "defaultValue": "scripts"
    }
  },
  "variables": {
    /* General */
    "_tenantId": "[subscription().tenantId]",

    /* Key Vault */
    "keyVaultName": "[concat('acmeproduct', parameters('shortregion'), parameters('environment'), 'vault')]",
    "keyVaultTemplateName": "keyvault.json",
    "keyVaultSecretCosmosDbAccountKey": "cosmos-db-account-key",
    "storageConnectionStringSecretName": "storage-conn-string",

    "keyVaultSecretSqlServerConnectionString": "sql-server-connection-string",
    "keyVaultSecretSqlServerUsername": "sql-server-username",
    "keyVaultSecretSqlServerPassword": "sql-server-password",
    "keyVaultSecretSqlServerServerName": "sql-server-server-name",

    /* App Service Plan */
    "appServicePlanName": "[concat('acmeproduct', parameters('shortregion'), parameters('environment'), 'svcplan')]",
    "appServicePlanTemplateName": "app-service-plan.json",

    /* App Service */
    "apiAppServiceName": "[concat('acmeproduct', parameters('shortregion'), parameters('environment'), 'webapp')]",
    "appServiceTemplateName": "web-app.json",

    /* App Service Plan Auto Scaling*/
    "appServicePlanAutoscaleSettingsTemplateName": "app-service-plan-autoscale.json",

    /* App Insights*/
    "appInsightsName": "[concat('acmeproduct', parameters('shortregion'), parameters('environment'),parameters('appInsightsSuffix'))]",
    "appInsightsTemplateName": "app-insights.json",

    /* SQL DB*/
    "sqlServerName": "[concat('acmeproduct', parameters('shortregion'), parameters('environment'),'sql')]",
    "sqlDbTemplateName": "sql-db.json"
  },
  "resources": [
    /* SQL db */
    {
      "name": "product-db",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', parameters('_templateFolder'), '/', variables('sqlDbTemplateName'), parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlServerName": {
            "value": "[variables('sqlServerName')]"
          },
          "sqlDbName": {
            "value": "[parameters('sqlDbName')]"
          },
          "sqlDbEdition": {
            "value": "[parameters('sqlDbEdition')]"
          },
          "sqlDbTier": {
            "value": "[parameters('sqlDbTier')]"
          },
          "maxSizeInBytes": {
            "value": "[parameters('sqlDbMaxSizeInBytes')]"
          },
          "sqlServerAdminLogin": {
            "value": "[parameters('sqlServerAdminLogin')]"
          },
          "sqlServerAdminLoginPassword": {
            "value": "[parameters('sqlServerAdminLoginPassword')]"
          }
        }
      }
    },
    /* Key Vault */
    {
      "name": "key-vault",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'web-api-app-service')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', parameters('_templateFolder'), '/', variables('keyVaultTemplateName'), parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "tenantId": {
            "value": "[variables('_tenantId')]"
          },
          "accessPolicies": {
            "value": [
              {
                "tenantId": "[variables('_tenantId')]",
                "objectId": "[reference('web-api-app-service', '2016-09-01').outputs.msiPrincipalId.value]",
                "permissions": {
                  "secrets": [ "get" ]
                }
              }
            ]
          },
          "secretsObject": {
            "value": {
              "secrets": [
                {
                  "secretName": "[variables('keyVaultSecretSqlServerConnectionString')]",
                  "secretValue": "[reference('product-db').outputs.connectionString.value]"
                }
              ]
            }
          }
        }
      }
    },
    /* App Service Plan */
    {
      "name": "app-service-plan",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', parameters('_templateFolder'), '/', variables('appServicePlanTemplateName'), parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "appServicePlanSKUTier": {
            "value": "[parameters('appServicePlanSKUTier')]"
          },
          "appServicePlanSKUName": {
            "value": "[parameters('appServicePlanSKUName')]"
          }
        }
      }
    },
    /* App Service Plan Autoscaling */
    {
      "name": "app-service-plan-autoscale",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'app-service-plan')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', parameters('_templateFolder'), '/', variables('appServicePlanAutoscaleSettingsTemplateName'), parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "svcPlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "metricResourceId": {
            "value": "[reference('app-service-plan').outputs.resourceId.value]"
          }
        }
      }
    },
    /* Web API App Service */
    {
      "name": "web-api-app-service",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'app-service-plan')]",
        "[concat('Microsoft.Resources/deployments/', 'app-insights')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', parameters('_templateFolder'), '/', variables('appServiceTemplateName'), parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "webAppName": {
            "value": "[variables('apiAppServiceName')]"
          },
          "deployWebAppPackage": {
            "value": false
          },
          "alwaysOn": {
            "value": true
          }
        }
      }
    },
    /* App Insights*/
    {
      "name": "app-insights",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', parameters('_templateFolder'), '/', variables('appInsightsTemplateName'), parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appName": {
            "value": "[variables('appInsightsName')]"
          },
          "location": {
            "value": "[parameters('appInsightsLocation')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "webApiName": {
      "type": "string",
      "value": "[variables('apiAppServiceName')]"
    },
    "webApiUrl": {
      "type": "string",
      "value": "[reference('web-api-app-service').outputs.httpsUrl.value]"
    },
    
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "appInsightsName": {
      "type": "string",
      "value": "[variables('appInsightsName')]"
    },
    "appInsightsInstrumentationKey": {
      "type": "string",
      "value": "[reference('app-insights').outputs.instrumentationKey.value]"
    },
    "sqlServerName": {
      "type": "string",
      "value": "[variables('sqlServerName')]"
    },
    "sqlDbName": {
      "type": "string",
      "value": "[parameters('sqlDbName')]"
    }
  }
}